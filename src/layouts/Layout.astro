---
import { pwaInfo } from 'virtual:pwa-info'

export interface Props {
  title: "Jawon AI Chat";
}

const { title } = "Jawon AI Chat";
---

<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0,viewport-fit=cover">
        <link rel="icon" type="image/svg+xml" href="/icon.svg">
        <link rel="apple-touch-icon" href="/apple-touch-icon.png" sizes="180x180">
        <link rel="mask-icon" href="/icon.svg" color="#FFFFFF">
        <meta name="theme-color" content="#212129">
        <meta name="generator" content={Astro.generator}>
        <title>Jawon AI</title>
        <meta name="description" content="A Minimal web UI for GeminiPro Chat.">
        { import.meta.env.HEAD_SCRIPTS && <Fragment set:html={import.meta.env.HEAD_SCRIPTS } /> }
        { pwaInfo && <Fragment set:html={pwaInfo.webManifest.linkTag} /> }
        { import.meta.env.PROD && pwaInfo && <Fragment set:html={pwaInfo.registerSW.scriptTag} /> }
    </head>
    <body>
        <slot />
        <button id="back-to-top" class="btn btn-primary">
            <i class="fas fa-chevron-up"></i>
        </button>
        <button id="back-to-bottom" class="btn btn-primary">
            <i class="fas fa-chevron-down"></i>
        </button>
    </body>
    <script>
        setInterval(() => {
            // 所有链接在新页面打开
            const links = document.querySelectorAll("a");
            for (let i = 0; i < links.length; i++) {
                links[i].target = "_blank";
            }
        }, 100);

        // 滚动到顶部或底部按钮
        const backToTopButton = document.getElementById('back-to-top');
        const backToBottomButton = document.getElementById('back-to-bottom');

        window.addEventListener('scroll', function () {
            if (window.scrollY > 200) {
                backToTopButton.classList.add('show');
                backToBottomButton.classList.remove('show');
            } else {
                backToBottomButton.classList.add('show');
                backToTopButton.classList.remove('show');
            }
        });

        backToTopButton.addEventListener('click', function (e) {
            e.preventDefault();
            window.scrollTo({ top: 0, behavior: 'smooth' });
        });

        backToBottomButton.addEventListener('click', function (e) {
            e.preventDefault();
            window.scrollTo({ top: document.body.scrollHeight, behavior: 'smooth' });
        });
    </script>
</html>

<style is:global>
    :root {
        --c-bg: #fbfbfb;
        --c-fg: #444444;
        --c-scroll: #d9d9d9;
        --c-scroll-hover: #bbbbbb;
        scrollbar-color: var(--c-scrollbar) var(--c-bg);
    }

    html {
        font-family: system-ui, sans-serif;
        background-color: var(--c-bg);
        color: var(--c-fg);
    }

    html.dark {
        --c-bg: #212129;
        --c-fg: #ddddf0;
        --c-scroll: #333333;
        --c-scroll-hover: #555555;
    }

    main {
        max-width: 70vw;
        min-height: calc(100vh - 4rem);
        margin: 0 auto;
        padding: 6rem 2rem 4rem;
    }

    .message.prose.break-words.overflow-hidden {
        max-width: fit-content !important;
    }

    .gen-text-wrapper.relative > * {
        border-radius: 8px !important;
    }
    main > astro-island > div, main > astro-island > div > div {
        border-radius: 10px !important;
    }
    main>astro-island>div>div:nth-last-child(2) {
        border-bottom: 1px solid #8888;
    }

    .md\:hover\:bg-slate\/3:hover {
        background-color: #6a6a6a12 !important;;
    }
    
    .rounded-lg {
        opacity: 1;
    }

    .gen-textarea {
        max-height: 80vh;
    }

    div#themeToggle {
        position: fixed;
        top: 10px;
        right: 10px;
    }

    #back-to-top, #back-to-bottom {
        position: fixed;
        bottom: 20px;
        right: 20px;
        width: 60px;
        height: 60px;
        border-radius: 50%;
        border: solid 1px #8888;
        background-size: 29px;
        background-position: 15px;
        background-repeat: no-repeat;
        background-color: #7a7a7a24;
        display: none;
    }
    #back-to-top {
        background-image: url(../arrow-up.svg);
    }
    #back-to-bottom {
        background-image: url("../arrow-down.svg");
    }
    .show {
        display: block !important;
    }

    /* 匹配宽度小于 768px 的设备的样式（手机平板等） */
    @media (max-width: 768px) {
        main {
        max-width: 96vw;
        }
        textarea::-webkit-scrollbar {
        width: 0px;
        }
        .gen-text-wrapper.relative {
        width: 92vw;
        margin-left: -1rem;
        } 
    }


    ::-webkit-scrollbar {
        width: 10px;
        height: 6px;
    }
    ::-webkit-scrollbar-thumb {
        background-color: var(--c-scroll);
        border-radius: 4px;
    }
    ::-webkit-scrollbar-thumb:hover {
        background-color: var(--c-scroll-hover);
    }
    ::-webkit-scrollbar-track {
        background-color: var(--c-bg);
    }

    @media screen and (max-width: 768px) {
        main {
        min-height: calc(100vh - 4.5rem);
        }
    }
    ::view-transition-old(root),
    ::view-transition-new(root) {
        animation: none;
        mix-blend-mode: normal;
    }

    .dark::view-transition-old(root) {
        z-index: 1;
    }

    .dark::view-transition-new(root) {
        z-index: 999;
    }

    ::view-transition-old(root) {
        z-index: 999;
    }

    ::view-transition-new(root) {
        z-index: 1;
    }

    /* 两个聊天头像 */
    .rounded-lg > .to-yellow-400 {
        background-image: url(../user.svg);
        background-size: 24px;
        background-position: 2px 0; 
        background-repeat: no-repeat;
    }
    .rounded-lg > .to-green-300 {
        background-image: url("../avatar.jpg");  
        background-size: cover;
    }
</style>

<script>
const initTheme = () => {
  const darkSchema
    = window.matchMedia
    && window.matchMedia('(prefers-color-scheme: dark)').matches
  const storageTheme = localStorage.getItem('theme')
  if (storageTheme) {
    document.documentElement.classList.toggle(
      'dark',
      storageTheme === 'dark',
    )
  } else {
    document.documentElement.classList.toggle('dark', darkSchema)
  }
}

initTheme();
</script>
